# meta pic: https://static.whypodg.me/mods!chatmod.png
# meta banner: https://mods.whypodg.me/badges/chatmod.jpg
# meta developer: @zolotarevxc üåü
# scope: hikka_only
# scope: hikka_min 1.2.10

from .. import loader, utils
from os import remove
from telethon.tl.functions.channels import LeaveChannelRequest, InviteToChannelRequest
from telethon.errors import UserIdInvalidError, UserNotMutualContactError, UserPrivacyRestrictedError, \
    BotGroupsBlockedError, ChannelPrivateError, YouBlockedUserError, MessageTooLongError, \
    UserBlockedError, ChatAdminRequiredError, UserKickedError, InputUserDeactivatedError, ChatWriteForbiddenError, \
    UserAlreadyParticipantError
from telethon.tl.types import ChannelParticipantCreator, ChannelParticipantsAdmins, PeerChat, ChannelParticipantsBots
from telethon.tl.functions.messages import AddChatUserRequest


@loader.tds
class ChatMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–º —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ —ç–º–æ–¥–∑–∏!"""
    strings = {'name': 'ChatModule'}

    # –°—Ç—Ä–æ–∫–∏ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –º–æ–¥—É–ª—è –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º
    strings = {
        'name': 'ChatModule',
        'description': '–ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–º —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ —ç–º–æ–¥–∑–∏! üåê',
        'developer': '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @zolotarevxc üåü'
    }

    async def on_load(self, message):
        """–ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è –≤—ã–≤–æ–¥–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–µ"""
        await utils.answer(message, f"{self.strings['description']}\n{self.strings['developer']}")

    async def helpmodulecmd(self, message):
        """–ö–æ–º–∞–Ω–¥–∞ .helpmodule –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –ø–æ –º–æ–¥—É–ª—é."""
        help_text = (
            "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n"
            "<code>.userid <@–∏–ª–∏—Ä–µ–ø–ª–∞–π></code> - –ü–æ–∫–∞–∑–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üë§\n"
            "<code>.chatid</code> - –ü–æ–∫–∞–∑–∞—Ç—å ID —á–∞—Ç–∞ üè∑Ô∏è\n"
            "<code>.invite <@–∏–ª–∏—Ä–µ–ø–ª–∞–π></code> - –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç üéâ\n"
            "<code>.kickme</code> - –í—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞ üëã\n"
            "<code>.users</code> - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–∞—Ç–∞ üë•\n"
            "<code>.admins</code> - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —á–∞—Ç–∞ üëë\n"
            "<code>.bots</code> - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –±–æ—Ç–æ–≤ —á–∞—Ç–∞ ü§ñ\n\n"
            "<b>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:</b> @zolotarevxc üåü"
        )
        await message.edit(help_text)

    async def useridcmd(self, message):
        """–ö–æ–º–∞–Ω–¥–∞ .userid <@ –∏–ª–∏ —Ä–µ–ø–ª–∞–π> –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        args = utils.get_args_raw(message)
        reply = await message.get_reply_message()

        try:
            if args:
                user = await message.client.get_entity(args if not args.isdigit() else int(args))
            else:
                user = await message.client.get_entity(reply.sender_id if reply else message.sender_id)
        except ValueError:
            user = await message.client.get_entity(message.sender_id)

        await message.edit(f"<b>–ò–º—è:</b> <code>{user.first_name}</code> üë§\n"
                           f"<b>ID:</b> <code>{user.id}</code> üÜî")

    async def chatidcmd(self, message):
        """–ö–æ–º–∞–Ω–¥–∞ .chatid –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç ID —á–∞—Ç–∞."""
        if not message.is_private:
            args = utils.get_args_raw(message)
            to_chat = None

            try:
                if args:
                    to_chat = args if not args.isdigit() else int(args)
                else:
                    to_chat = message.chat_id
            except ValueError:
                to_chat = message.chat_id

            chat = await message.client.get_entity(to_chat)

            await message.edit(f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> <code>{chat.title}</code> üè∑Ô∏è\n"
                               f"<b>ID:</b> <code>{chat.id}</code> üÜî")
        else:
            return await message.edit("<b>–≠—Ç–æ –Ω–µ —á–∞—Ç!</b> ‚ùå")

    async def invitecmd(self, message):
        """–ö–æ–º–∞–Ω–¥–∞ .invite <@ –∏–ª–∏ —Ä–µ–ø–ª–∞–π> –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç."""
        if message.is_private:
            return await message.edit("<b>–≠—Ç–æ –Ω–µ —á–∞—Ç!</b> ‚ùå")

        args = utils.get_args_raw(message)
        reply = await message.get_reply_message()

        if not args and not reply:
            return await message.edit("<b>–ù–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ —Ä–µ–ø–ª–∞—è.</b> ‚ö†Ô∏è")

        try:
            if args:
                user = args if not args.isdigit() else int(args)
            else:
                user = reply.sender_id

            user = await message.client.get_entity(user)

            if not message.is_channel and message.is_group:
                await message.client(AddChatUserRequest(chat_id=message.chat_id,
                                                        user_id=user.id,
                                                        fwd_limit=1000000))
            else:
                await message.client(InviteToChannelRequest(channel=message.chat_id,
                                                            users=[user.id]))
            return await message.edit("<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω! üéâ</b>")

        except ValueError:
            m = "<b>–ù–µ–≤–µ—Ä–Ω—ã–π @ –∏–ª–∏ ID.</b> ‚ö†Ô∏è"
        except UserIdInvalidError:
            m = "<b>–ù–µ–≤–µ—Ä–Ω—ã–π @ –∏–ª–∏ ID.</b> ‚ö†Ô∏è"
        except UserPrivacyRestrictedError:
            m = "<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –µ–≥–æ.</b> üîí"
        except UserNotMutualContactError:
            m = "<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –µ–≥–æ.</b> üîí"
        except ChatAdminRequiredError:
            m = "<b>–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è.</b> ‚õî"
        except ChatWriteForbiddenError:
            m = "<b>–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è.</b> ‚õî"
        except ChannelPrivateError:
            m = "<b>–≠—Ç–æ—Ç –∫–∞–Ω–∞–ª –∑–∞–∫—Ä—ã—Ç.</b> üö´"
        except UserKickedError:
            m = "<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–∫–ª—é—á—ë–Ω –∏–∑ —á–∞—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.</b> üö´"
        except BotGroupsBlockedError:
            m = "<b>–ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ —á–∞—Ç–µ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.</b> üö´"
        except UserBlockedError:
            m = "<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ —á–∞—Ç–µ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.</b> üö´"
        except InputUserDeactivatedError:
            m = "<b>–ê–∫–∫–∞—É–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–¥–∞–ª—ë–Ω.</b> üï≥Ô∏è"
        except UserAlreadyParticipantError:
            m = "<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –≥—Ä—É–ø–ø–µ.</b> ‚úÖ"
        except YouBlockedUserError:
            m = "<b>–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</b> üö´"
        return await message.reply(m)

    async def kickmecmd(self, message):
        """–ö–æ–º–∞–Ω–¥–∞ .kickme –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —á–∞—Ç–∞."""
        args = utils.get_args_raw(message)
        if not message.is_private:
            if args:
                await message.edit(f"<b>–î–æ —Å–≤–∏–¥–∞–Ω–∏—è. –ü—Ä–∏—á–∏–Ω–∞: {args} üëã</b>")
            else:
                await message.edit("<b>–î–æ —Å–≤–∏–¥–∞–Ω–∏—è üëã</b>")
            await message.client(LeaveChannelRequest(message.chat_id))
        else:
            return await message.edit("<b>–≠—Ç–æ –Ω–µ —á–∞—Ç!</b> ‚ùå")

    async def userscmd(self, message):
        """–ö–æ–º–∞–Ω–¥–∞ .users –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–∞—Ç–∞ üë•"""
        if not message.is_private:
            await message.edit("<b>–°—á–∏—Ç–∞—é... üî¢</b>")
            args = utils.get_args_raw(message)
            info = await message.client.get_entity(message.chat_id)
            title = info.title or "—ç—Ç–æ–º —á–∞—Ç–µ"

            if not args:
                users = await message.client.get_participants(message.chat_id)
                mentions = f"<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ \"{title}\": {len(users)} üßë‚Äçü§ù‚Äçüßë</b> \n"
            else:
                users = await message.client.get_participants(message.chat_id, search=f"{args}")
                mentions = f'<b>–í —á–∞—Ç–µ "{title}" –Ω–∞–π–¥–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏–º–µ–Ω–µ–º {args}:</b> \n'

            for user in users:
                if not user.deleted:
                    mentions += f"\n‚Ä¢ <a href =\"tg://user?id={user.id}\">{user.first_name}</a> | <code>{user.id}</code>"
                else:
                    mentions += f"\n‚Ä¢ –£–¥–∞–ª—ë–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç <b>|</b> <code>{user.id}</code> üõë"

            try:
                if len(mentions) > 4096:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    await message.edit("<b>–ß–µ—Ä—Ç, —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π —á–∞—Ç. –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª...</b> üìÑ")
                    file = open("userslist.md", "w+")
                    file.write(mentions)
                    file.close()
                    await message.client.send_file(message.chat_id,
                                                   "userslist.md",
                                                   caption="<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ {}:</b> üìÑ".format(title),
                                                   reply_to=message.id)
                    remove("userslist.md")
                    await message.delete()
                else:
                    await message.edit(mentions)
            except Exception as e:
                await message.edit(f"<b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}</b> ‚ö†Ô∏è")
        else:
            return await message.edit("<b>–≠—Ç–æ –Ω–µ —á–∞—Ç!</b> ‚ùå")

    async def adminscmd(self, message):
        """–ö–æ–º–∞–Ω–¥–∞ .admins –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —á–∞—Ç–∞ üëë"""
        if not message.is_private:
            await message.edit("<b>–°—á–∏—Ç–∞—é... üî¢</b>")
            info = await message.client.get_entity(message.chat_id)
            title = info.title or "this chat"

            admins = await message.client.get_participants(message.chat_id, filter=ChannelParticipantsAdmins)
            mentions = f"<b>–ê–¥–º–∏–Ω–æ–≤ –≤ \"{title}\": {len(admins)} üëë</b>\n"

            for user in admins:
                admin = admins[admins.index((await message.client.get_entity(user.id)))].participant
                if not admin:
                    if type(admin) == ChannelParticipantCreator:
                        rank = "creator" 
                    else:
                        rank = "admin"
                else:
                    rank = admin.rank or "admin"

                if not user.deleted:
                    mentions += f"\n‚Ä¢ <a href=\"tg://user?id={user.id}\">{user.first_name}</a> | {rank} | <code>{user.id}</code>"
                else:
                    mentions += f"\n‚Ä¢ –£–¥–∞–ª—ë–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç <b>|</b> <code>{user.id}</code> üõë"

            try:
                await message.edit(mentions)
            except MessageTooLongError:
                await message.edit("–ß–µ—Ä—Ç, —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∞–¥–º–∏–Ω–æ–≤ –∑–¥–µ—Å—å. –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –≤ —Ñ–∞–π–ª... üìÑ")
                file = open("adminlist.md", "w+")
                file.write(mentions)
                file.close()
                await message.client.send_file(message.chat_id,
                                               "adminlist.md",
                                               caption="<b>–ê–¥–º–∏–Ω–æ–≤ –≤ \"{}\":</b> üëë".format(title),
                                               reply_to=message.id)
                remove("adminlist.md")
                await message.delete()
        else:
            return await message.edit("<b>–≠—Ç–æ –Ω–µ —á–∞—Ç!</b> ‚ùå")

    async def botscmd(self, message):
        """–ö–æ–º–∞–Ω–¥–∞ .bots –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –±–æ—Ç–æ–≤ —á–∞—Ç–∞ ü§ñ"""
        if not message.is_private:
            await message.edit("<b>–°—á–∏—Ç–∞—é... üî¢</b>")

            info = await message.client.get_entity(message.chat_id)
            title = info.title if info.title else "this chat"

            bots = await message.client.get_participants(message.to_id, filter=ChannelParticipantsBots)
            mentions = f"<b>–ë–æ—Ç–æ–≤ –≤ \"{title}\": {len(bots)} ü§ñ</b>\n"

            for user in bots:
                if not user.deleted:
                    mentions += f"\n‚Ä¢ <a href=\"tg://user?id={user.id}\">{user.first_name}</a> | <code>{user.id}</code>"
                else:
                    mentions += f"\n‚Ä¢ –£–¥–∞–ª—ë–Ω–Ω—ã–π –±–æ—Ç <b>|</b> <code>{user.id}</code> üõë"

            try:
                await message.edit(mentions, parse_mode="html")
            except MessageTooLongError:
                await message.edit("–ß–µ—Ä—Ç, —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –±–æ—Ç–æ–≤ –∑–¥–µ—Å—å. –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –±–æ—Ç–æ–≤ –≤ —Ñ–∞–π–ª... üìÑ")
                file = open("botlist.md", "w+")
                file.write(mentions)
                file.close()
                await message.client.send_file(message.chat_id,
                                               "botlist.md",
                                               caption="<b>–ë–æ—Ç–æ–≤ –≤ \"{}\":</b> ü§ñ".format(title),
                                               reply_to=message.id)
                remove("botlist.md")
                await message.delete()
        else:
            return await message.edit("<b>–≠—Ç–æ –Ω–µ —á–∞—Ç!</b> ‚ùå")
